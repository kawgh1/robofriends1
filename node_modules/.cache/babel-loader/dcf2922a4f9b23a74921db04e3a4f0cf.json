{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JJ\\\\desktop\\\\REACT HOOOOOOOOOOOOOO\\\\robofriends\\\\src\\\\containers\\\\App.js\";\nimport React from 'react';\nimport CardList from '../components/CardList'; // robots copy and pasted in pre-made file\n// files with multiple exports must be desctructured like this\n// no longer using an array of robots, we are now \n// initializing with an empty array and using a lifecycle hook to grab them from somewhere else\n// import { robots } from './robots';\n\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport '../containers/App.css';\nimport ErrorBoundary from '../components/ErrorBoundary'; // because 'App' now owns 'state', it's allowed to change it\n// and since it is the root node, when it changes state\n// all children nodes are updated that are affected\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    // .then(response => {\n    // \treturn response.json();\n    // })\n    // .then(users => {\n    // \tthis.setState({ robots:users })\n    // })\n    // same as\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } // because the event occurred on the Virtual DOM Window object,\n  // 'this' is the input and not the filteredRobots\n  // so need to change the method structure (same for all custom React functions)\n  // onSearchChange(event){ need to be\n\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); // print out whatever is typed in the event\n      // console.log(event.target.value);\n      // console.log(filteredRobots);\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      // was <CardList robots={this.state.robots}/>\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }\n      }, \"Robofriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ErrorBoundary, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CardList, {\n        robots: filteredRobots,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/JJ/desktop/REACT HOOOOOOOOOOOOOO/robofriends/src/containers/App.js"],"names":["React","CardList","SearchBox","Scroll","ErrorBoundary","App","Component","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CACA;AACA;AAEA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,uBAAP;AAEA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAG;AACb;;AADa,SA6BdC,cA7Bc,GA6BIC,KAAD,IAAW;AAE3B,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACA,KAhCa;;AAEb,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZJ,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA;;AAEDK,EAAAA,iBAAiB,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKX,QAAL,CAAc;AAAEK,MAAAA,MAAM,EAACM;AAAT,KAAd,CAFf;AAIA,GAvBgC,CAyBjC;AACA;AACA;AAEA;;;AAKAC,EAAAA,MAAM,GAAG;AAER,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAI;AACxD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAlC,CAAP,CADwD,CAGxD;AACA;AACA;AAEA,KAPsB,CAAvB;;AASA,QAAI,KAAKb,KAAL,CAAWC,MAAX,CAAkBc,MAAlB,KAA6B,CAAjC,EAAmC;AAClC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA,KAFD,MAEO;AACP;AACC,0BACC;AAAK,QAAA,SAAS,EAAG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEA;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,eAKC,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,eAOA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADA,CAPA,CADD;AAiBC;AACD;;AAnE+B;;AAuElC,eAAelB,GAAf","sourcesContent":["import React from 'react';\r\nimport CardList from '../components/CardList';\r\n// robots copy and pasted in pre-made file\r\n// files with multiple exports must be desctructured like this\r\n\r\n// no longer using an array of robots, we are now \r\n// initializing with an empty array and using a lifecycle hook to grab them from somewhere else\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport '../containers/App.css';\r\n\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\n// because 'App' now owns 'state', it's allowed to change it\r\n// and since it is the root node, when it changes state\r\n// all children nodes are updated that are affected\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// fetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t// .then(response => {\r\n\t\t// \treturn response.json();\r\n\t\t// })\r\n\t\t// .then(users => {\r\n\t\t// \tthis.setState({ robots:users })\r\n\t\t// })\r\n\r\n\t\t// same as\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ robots:users }));\r\n\r\n\t}\r\n\r\n\t// because the event occurred on the Virtual DOM Window object,\r\n\t// 'this' is the input and not the filteredRobots\r\n\t// so need to change the method structure (same for all custom React functions)\r\n\r\n\t// onSearchChange(event){ need to be\r\n\tonSearchChange = (event) => {\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\trender() {\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\r\n\t\t\t// print out whatever is typed in the event\r\n\t\t\t// console.log(event.target.value);\r\n\t\t\t// console.log(filteredRobots);\r\n\r\n\t\t})\r\n\r\n\t\tif (this.state.robots.length === 0){\r\n\t\t\treturn <h1>Loading...</h1>\r\n\t\t} else {\r\n\t\t// was <CardList robots={this.state.robots}/>\r\n\t\t\treturn (\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\r\n\t\t\t\t<h1 className='f2'>Robofriends</h1>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}