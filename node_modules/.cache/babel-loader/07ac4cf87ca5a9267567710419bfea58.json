{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JJ\\\\desktop\\\\robofriends\\\\src\\\\App.js\";\nimport React from 'react';\nimport CardList from './CardList'; // robots copy and pasted in pre-made file\n// files with multiple exports must be desctructured like this\n// no longer using an array of robots, we are now \n// initializing with an empty array and using a lifecycle hook to grab them from somewhere else\n// import { robots } from './robots';\n\nimport SearchBox from './SearchBox';\nimport './App.css'; // because 'App' now owns 'state', it's allowed to change it\n// and since it is the root node, when it changes state\n// all children nodes are updated that are affected\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  } // because the event occurred on the Virtual DOM Window object,\n  // 'this' is the input and not the filteredRobots\n  // so need to change the method structure (same for all custom React functions)\n  // onSearchChange(event){ need to be\n\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); // print out whatever is typed in the event\n      // console.log(event.target.value);\n      // console.log(filteredRobots);\n    }); // was <CardList robots={this.state.robots}/>\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, \"Robofriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      robots: filteredRobots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/JJ/desktop/robofriends/src/App.js"],"names":["React","CardList","SearchBox","App","Component","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;AAEA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAG;AACb;;AADa,SAwBdC,cAxBc,GAwBIC,KAAD,IAAW;AAE3B,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AACA,KA3Ba;;AAEb,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZJ,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA;;AAEDK,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AACjBA,MAAAA,QAAQ,CAACC,IAAT;AACA,KAHD,EAICF,IAJD,CAIMG,KAAK,IAAI;AACd,WAAKX,QAAL,CAAc;AAAEK,QAAAA,MAAM,EAACM;AAAT,OAAd;AACA,KAND;AAQA,GAlBgC,CAoBjC;AACA;AACA;AAEA;;;AAKAC,EAAAA,MAAM,GAAG;AAER,UAAMC,cAAc,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBC,KAAK,IAAI;AACxD,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKd,KAAL,CAAWH,WAAX,CAAuBgB,WAAvB,EAAlC,CAAP,CADwD,CAGxD;AACA;AACA;AAEA,KAPsB,CAAvB,CAFQ,CAUR;;AACA,wBACC;AAAK,MAAA,SAAS,EAAG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKnB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD;AAUA;;AAlDgC;;AAqDlC,eAAelB,GAAf","sourcesContent":["import React from 'react';\r\nimport CardList from './CardList';\r\n// robots copy and pasted in pre-made file\r\n// files with multiple exports must be desctructured like this\r\n\r\n// no longer using an array of robots, we are now \r\n// initializing with an empty array and using a lifecycle hook to grab them from somewhere else\r\n// import { robots } from './robots';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\n\r\n// because 'App' now owns 'state', it's allowed to change it\r\n// and since it is the root node, when it changes state\r\n// all children nodes are updated that are affected\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => {\r\n\t\t\tresponse.json();\r\n\t\t})\r\n\t\t.then(users => {\r\n\t\t\tthis.setState({ robots:users })\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t// because the event occurred on the Virtual DOM Window object,\r\n\t// 'this' is the input and not the filteredRobots\r\n\t// so need to change the method structure (same for all custom React functions)\r\n\r\n\t// onSearchChange(event){ need to be\r\n\tonSearchChange = (event) => {\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\trender() {\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\r\n\t\t\t// print out whatever is typed in the event\r\n\t\t\t// console.log(event.target.value);\r\n\t\t\t// console.log(filteredRobots);\r\n\r\n\t\t})\r\n\t\t// was <CardList robots={this.state.robots}/>\r\n\t\treturn (\r\n\t\t\t<div className = 'tc'>\r\n\t\t\t\t<h1 className='f2'>Robofriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}